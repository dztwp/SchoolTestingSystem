@using Epam.XT.SchoolTestingSystem.Dependencies;
@using Epam.XT.SchoolTestingSystem.Common.Entities;
@{

    Layout = "~/Pages/Layouts/_BasicLayout.cshtml";
    PageData["Title"] = "Обновление теста";
    var _testBLL = DependencyResolver.Instance.testBLL;
    var _userBLL = DependencyResolver.Instance.userBLL;
    Test test = _testBLL.GetTestByDescription(Request.QueryString["Description"]);
    bool isDescriptionValid = false;
    int timeToPass = default(int);
    int numberOfQuestions = default(int);
    bool enteredValuesIsValid = false;
    if (isDescriptionValid = Request.QueryString["description"] != null)
    {
        enteredValuesIsValid = (int.TryParse(Request.QueryString["timeToPass"], out timeToPass) &&
        int.TryParse(Request.QueryString["numberOfAnswers"], out numberOfQuestions));
    }
    int.TryParse(Request.QueryString["timeToPass"], out timeToPass);
    int.TryParse(Request.QueryString["numberOfAnswers"], out numberOfQuestions);

}
@if (IsPost)
{
    Question[] questionArray = new Question[numberOfQuestions];
    string description = Request["description"];
    for (int i = 0; i < questionArray.Length; i++)
    {
        var questionDescription = Request[string.Format("questionDescription{0}", i + 1)];
        var numberOfRightAnswer = int.Parse(Request[string.Format("exampleRadios{0}", i + 1)]);
        var arrayOfAswers = new string[]{
            Request[string.Format("inputRadios{0}1", i + 1)],
            Request[string.Format("inputRadios{0}2", i + 1)],
            Request[string.Format("inputRadios{0}3", i + 1)],
            Request[string.Format("inputRadios{0}4", i + 1)]};
        questionArray[i] = new Question(test.QuestionArray[i].Id, questionDescription, i + 1, numberOfRightAnswer, arrayOfAswers);
    }
    _testBLL.UpdateTest(new Test(test.Id, description, timeToPass, questionArray, numberOfQuestions));
    Response.Redirect("~/Pages/index.cshtml");
}
@if (!enteredValuesIsValid)
{
    @RenderPage("~/Pages/Partial/_Error.cshtml", new { info = "Параметры запроса имеют некорректный формат", param = Request.Url + " Пользователь пытался изменить GET запрос" });
}
<div class="container">
    <div class="row">
        <div class="col-12 col-sm-6 offset-sm-3">
            <form method="post" name="executionForm">
                @for (int i = 0; i < numberOfQuestions; i++)
                {
                    <div class="form-group col-sm-8 offset-sm-2">
                        <div class="col-8 offset-2 question">
                            <input name="questionDescription@(i + 1)" id="QuestionDescription" value="@test.QuestionArray[i].Description">
                            <input hidden id="numberOfQuestion" type="text" readonly value="@test.QuestionArray[i].NumberOfQuestion" />
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="exampleRadios@(i + 1)1" id="Radios@(i + 1)1" value="1" />
                            <input type="text" name="inputRadios@(i + 1)1" class="form-check-label" for="Radios@(i + 1)1" value="@test.QuestionArray[i].Answers[0]" maxlength="16">
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="exampleRadios@(i + 1)2" id="Radios@(i + 1)2" value="2">
                            <input type="text" name="inputRadios@(i + 1)2" class="form-check-label" for="Radios@(i + 1)2" value="@test.QuestionArray[i].Answers[1]" maxlength="16">
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="exampleRadios@(i + 1)3" id="Radios@(i + 1)3" value="3">
                            <input type="text" name="inputRadios@(i + 1)3" class="form-check-label" for="Radios@(i + 1)3" value="@test.QuestionArray[i].Answers[2]" maxlength="16">
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="exampleRadios@(i + 1)4" id="Radios@(i + 1)4" value="4">
                            <input type="text" name="inputRadios@(i + 1)4" class="form-check-label" for="Radios@(i + 1)4" value="@test.QuestionArray[i].Answers[3]" maxlength="16">
                        </div>
                        <input hidden checked class="form-check-input" type="radio" name="exampleRadios@(i + 1)" id="Radios@(i+1)" value="@test.QuestionArray[i].NumberOfRightAnswer">

                    </div>

                }
                <div class="col-12 offset-2 col-sm-6 offset-sm-3">
                    <button type="submit" class="btn btn-primary">Обновить тест</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section ScriptsAndStyles{
    <link href="~/Content/stylesForTestExecution,Creation,AndUpdate.css" rel="stylesheet" />
}