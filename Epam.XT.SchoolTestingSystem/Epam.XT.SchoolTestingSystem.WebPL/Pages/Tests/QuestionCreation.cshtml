@using Epam.XT.SchoolTestingSystem.Common.Entities;
@using Epam.XT.SchoolTestingSystem.BLL.Interfaces;
@using Epam.XT.SchoolTestingSystem.Dependencies;

@{
    Layout = "~/Pages/Layouts/_BasicLayout.cshtml";

    var _testBLL = DependencyResolver.Instance.testBLL;

    var testInfo = Request.Form.AllKeys;

    string testDescription = Request.QueryString["description"];
    int timeToPass = int.Parse(Request.QueryString["timeToPass"]);
    int numberOfQuestions = int.Parse(Request.QueryString["numberOfAnswers"]);

}

@if (IsPost)
{
    if (_testBLL.isTestAlreadyExist(testDescription))
    {
        <div class="alert alert-warning" role="alert">
            Тест с указанным названием уже существует, введите другое название
        </div>
    }
    else
    {
        Question[] questionArray = new Question[numberOfQuestions];
        string description = Request["description"];
        for (int i = 0; i < questionArray.Length; i++)
        {
            var questionDescription = Request[string.Format("questionDescription{0}", i + 1)];
            var numberOfRightAnswer = int.Parse(Request[string.Format("exampleRadios{0}", i + 1)]);
            var arrayOfAswers = new string[]{
            Request[string.Format("inputRadios{0}1", i + 1)],
            Request[string.Format("inputRadios{0}2", i + 1)],
            Request[string.Format("inputRadios{0}3", i + 1)],
            Request[string.Format("inputRadios{0}4", i + 1)]};
            questionArray[i] = new Question(questionDescription, i + 1, numberOfRightAnswer, arrayOfAswers);
        }
        _testBLL.CreateTest(new Test(description, timeToPass, questionArray,numberOfQuestions));
        Response.Redirect("~/Pages/index.cshtml");
    }


}


<form method="post">
    @for (int i = 0; i < numberOfQuestions; i++)
    {
        <div class="form-group">
            <div>
                <label>Номер вопроса: @(i + 1)</label>
            </div>
            <div>
                <label for="inputQuestionDescription">Введите описание вопроса</label>
                <input name="questionDescription@(i + 1)" type="text" class="form-control" id="inputQuestionDescription">
            </div>
            <div class="form-check">
                <input checked class="form-check-input" type="radio" name="exampleRadios@(i + 1)" id="Radios1" value="1" />
                <input class="form-check-label" required for="Radios1" name="inputRadios@(i + 1)1">
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="exampleRadios@(i + 1)" id="Radios2" value="2">
                <input class="form-check-label" required for="Radios2" name="inputRadios@(i + 1)2">
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="exampleRadios@(i + 1)" id="Radios3" value="3">
                <input class="form-check-label" required for="Radios3" name="inputRadios@(i + 1)3">
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="exampleRadios@(i + 1)" id="Radios4" value="4">
                <input class="form-check-label" required for="Radios4" name="inputRadios@(i + 1)4">
            </div>

        </div>
    }
    <button type="submit" class="btn btn-primary">Создать тест</button>
</form>


